{"version":3,"sources":["components/Cards/Cards.module.css","api/index.js","components/Charts/Charts.jsx","components/Cards/Cards.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","images/covid.png","components/Charts/Charts.module.css","components/CountryPicker/CountryPicker.module.css"],"names":["module","exports","url","fetchData","country","a","changableUrl","axios","get","data","confirmed","recovered","deaths","lastUpdate","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","Charts","useState","setDailyData","useEffect","fetchAPI","length","lineChart","labels","datasets","label","borderColor","fill","backgroundColor","barChart","value","chart","className","styles","container","Cards","Grid","spacing","justify","item","component","Card","xs","md","cx","card","CardContent","Typography","color","gutterBottom","variant","start","end","duration","separator","Date","toDateString","death","CountryPicker","handleCountryChange","setCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","index","key","name","App","props","setState","countri","state","fetchedData","this","title","image","src","alt","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.58830f6b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__GpbdH\",\"card\":\"Cards_card__2C-uE\",\"confirmed\":\"Cards_confirmed__30cDZ\",\"recovered\":\"Cards_recovered__4OrQb\",\"death\":\"Cards_death__1KO_m\"};","import axios from \"axios\";\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData = async (country) =>{\r\n let changableUrl = url;\r\n if(country){\r\n  changableUrl = `${url}/countries/${country}`\r\n }\r\n  try{\r\n   const {data : {confirmed,recovered,deaths,lastUpdate}} = await axios.get(changableUrl);\r\n   return {confirmed, recovered, deaths, lastUpdate}\r\n\r\n  }\r\n  catch(err){\r\n    if(err){\r\n      throw err;\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport const fetchDailyData = async () =>{\r\n try{\r\n   const {data} = await axios.get(`${url}/daily`);\r\n  //  Returning objects in array;\r\n   const modifiedData = data.map((dailyData)=>({\r\n      confirmed:dailyData.confirmed.total,\r\n      deaths:dailyData.deaths.total,\r\n      date : dailyData.reportDate\r\n     })\r\n    )\r\n // This is returning array of objects containing the confirmed,deaths properties\r\n    return modifiedData;\r\n }\r\n catch(err){\r\n  if(err){\r\n   throw err;\r\n  }\r\n }\r\n}\r\n\r\n\r\n export const fetchCountries =  async () =>{\r\n try{\r\n  const {data:{countries}} = await axios.get(`${url}/countries`);\r\n  // return countries.map(country => country.name);\r\n  return countries;\r\n }\r\n catch(err){\r\n  if(err){\r\n   throw err;\r\n  }\r\n }\r\n}\r\n\r\n\r\nexport default fetchData;\r\n","import React,{useEffect,useState} from 'react'\r\nimport {fetchDailyData} from \"../../api/index\"\r\nimport { Line, Bar } from 'react-chartjs-2';\r\nimport styles from \"./Charts.module.css\"\r\n\r\n\r\nexport default function Charts({data: { confirmed, recovered, deaths },country}) {\r\n const [dailyData,setDailyData] = useState([])\r\n useEffect(()=>{\r\n   const fetchAPI = async () => {\r\n    setDailyData(await fetchDailyData());\r\n   }\r\n   fetchAPI()\r\n },[])\r\n\r\n if(dailyData.length ===0){\r\n  return \"coming\"\r\n }\r\n\r\n\r\n const lineChart = (\r\n  dailyData[0] ? (\r\n   <Line \r\n    data = {{\r\n      labels: dailyData.map(data => data.date),\r\n      datasets : [{\r\n       data: dailyData.map((data) => data.confirmed),\r\n       label: 'Infected',\r\n       borderColor: '#3333ff',\r\n       fill: true,\r\n      },\r\n      {\r\n       data:dailyData.map(data => data.deaths),\r\n       label:'Deaths',\r\n       borderColor:'red',\r\n       backgroundColor:'rgba(255, 0, 0, 0.5)',\r\n       fill:true,\r\n      }\r\n     ]\r\n    }}\r\n   /> \r\n  ): null\r\n )\r\n\r\n const barChart = (\r\n  confirmed ?(\r\n   <Bar \r\n   data = {{\r\n    labels:['Confirmed','Recovered','Deaths'],\r\n    datasets : [{\r\n     label: 'People',\r\n     data: [confirmed.value, recovered.value, deaths.value],\r\n     backgroundColor: ['rgba(0, 0, 255, 0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)'],\r\n     fill: true,\r\n         }]  \r\n      }}\r\n   />\r\n  ) : null\r\n )\r\n\r\n let  chart = lineChart;\r\n if(country){\r\n   chart = barChart\r\n }\r\n \r\n\r\n return (\r\n  <div className={styles.container}>\r\n     {chart}\r\n   </div>\r\n  )\r\n}","import React from 'react';\r\nimport {Grid,Card,CardContent,Typography} from '@material-ui/core';\r\nimport CountUp from \"react-countup\";\r\nimport cx from \"classnames\";\r\n\r\nimport styles from \"./Cards.module.css\";\r\n\r\nconst Cards = ({data : {confirmed,recovered,deaths,lastUpdate}}) => {\r\n \r\n if(!confirmed){\r\n  return \"loading\"\r\n }\r\n\r\n return (\r\n  <div className={styles.container}>\r\n    <Grid container spacing={3} justify=\"center\">\r\n     <Grid item component={Card} xs={12} md={3}  className={cx(styles.card,styles.confirmed)}>\r\n      <CardContent>\r\n       <Typography  color=\"textSecondary\"  gutterBottom>Confirmed</Typography>\r\n       <Typography variant=\"h5\">\r\n        <CountUp \r\n          start={0}\r\n          end={confirmed.value}\r\n          duration={2.5}\r\n          separator=\",\"\r\n        />\r\n       </Typography>\r\n       <Typography color=\"textSecondary\" >{new Date(lastUpdate).toDateString()}</Typography>\r\n       <Typography variant=\"body2\">Number of active cases of COVID 19</Typography>\r\n      </CardContent>\r\n     </Grid>\r\n     <Grid item component={Card} xs={12} md={3}  className={cx(styles.card,styles.recovered)}>\r\n      <CardContent>\r\n       <Typography   color=\"textSecondary\" gutterBottom>Recovered</Typography>\r\n       <Typography variant=\"h5\">\r\n        <CountUp \r\n            start={0}\r\n            end={recovered.value}\r\n            duration={2.5}\r\n            separator=\",\"\r\n          />\r\n       </Typography>\r\n       <Typography color=\"textSecondary\" >{new Date(lastUpdate).toDateString()}</Typography>\r\n       <Typography variant=\"body2\">Number of recovered cases of COVID 19</Typography>\r\n      </CardContent>\r\n     </Grid>\r\n     <Grid item component={Card}  xs={12} md={3}  className={cx(styles.card,styles.death)}>\r\n      <CardContent>\r\n      <Typography   color=\"textSecondary\" gutterBottom>Deaths</Typography>\r\n       <Typography variant=\"h5\">\r\n        <CountUp \r\n          start={0}\r\n          end={deaths.value}\r\n          duration={2.5}\r\n          separator=\",\"\r\n         />\r\n       </Typography>\r\n       <Typography color=\"textSecondary\" >{new Date(lastUpdate).toDateString()}</Typography>\r\n       <Typography variant=\"body2\">Number of deaths by COVID 19</Typography>\r\n      </CardContent>\r\n     </Grid>\r\n    </Grid>\r\n  </div>\r\n )\r\n}\r\n\r\nexport default Cards;","import React,{useEffect,useState} from 'react'\r\nimport styles from './CountryPicker.module.css';\r\nimport {fetchCountries} from \"../../api/index\";\r\nimport { NativeSelect, FormControl ,InputLabel} from '@material-ui/core';\r\n\r\nexport default function CountryPicker({handleCountryChange}) {\r\n\r\n const [countries,setCountries] = useState([])\r\n \r\n // only run when the countries array changes\r\n // useEffect hook only returns a function\r\n useEffect(() =>{\r\n   const fetchAPI = async () => {\r\n     setCountries(await fetchCountries())\r\n   }\r\n   fetchAPI();\r\n },[])\r\n\r\n \r\n\r\n return (\r\n  <div>\r\n    <FormControl className={styles.formControl} >\r\n        <NativeSelect\r\n          defaultValue=\"\"\r\n          onChange={(e) => handleCountryChange(e.target.value)}\r\n        >\r\n          <option value=\"\">Global</option>\r\n          { countries.map((country,index) => \r\n            <option key={index}>{country.name}</option>\r\n           )} \r\n         \r\n        </NativeSelect>\r\n      </FormControl> \r\n    \r\n  </div>\r\n )\r\n}\r\n","import React from 'react';\nimport styles from './App.module.css';\nimport image from \"./images/covid.png\"\nimport fetchData from \"./api/index\"\nimport Charts from \"./components/Charts/Charts\"\nimport Cards from \"./components/Cards/Cards\";\nimport CountryPicker from \"./components/CountryPicker/CountryPicker\";\n\n\nclass App extends React.Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      data : {},\n      countri :\"\"\n    }\n  }\n\n  // All the fetched data is undefined OK !  so you need to resolve the \n  // the promise by awaiting for it and gettig it .\n  async componentDidMount(){\n    const fetchedData = await  fetchData();\n    this.setState({\n      data:fetchedData\n    })\n  }\n\n  handleCountryChange = async (country) => {\n    const data = await fetchData(country);\n    this.setState({\n      data : data,\n      countri: country\n    })\n  }\n\n\n  render(){\n    return (\n      <div className={styles.container}>\n        <h2 className={styles.title}>COVID-19</h2>\n        <img className={styles.image} src={image} alt=\"COVID-19\" />\n        <Cards  data={this.state.data}/>\n        <CountryPicker handleCountryChange={this.handleCountryChange} />\n        <Charts data={this.state.data} country={this.state.countri}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n\n// Note : The app will be the class component\n// Rest all will be the functional component","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__2VuSy\",\"title\":\"App_title__18bRZ\",\"image\":\"App_image__23Lo2\"};","module.exports = __webpack_public_path__ + \"static/media/covid.d8f39472.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Charts_container__2xPBY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__24eL4\"};"],"sourceRoot":""}